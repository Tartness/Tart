
# FIND_CURRENT_OS() Sets the TART_CURRENT_OS variable
#
FUNCTION(FIND_CURRENT_OS)
  IF(${CMAKE_HOST_SYSTEM_NAME} MATCHES "Darwin")
    SET(TART_CURRENT_OS "macOS" CACHE STRING "" FORCE)
  ELSEIF(${CMAKE_HOST_SYSTEM_NAME} MATCHES "Windows")
    SET(TART_CURRENT_OS "Windows" CACHE STRING "" FORCE)
  ELSEIF(${CMAKE_HOST_SYSTEM_NAME} MATCHES "Linux")
    SET(TART_CURRENT_OS "Linux" CACHE STRING "" FORCE)
  ENDIF()
  # Set target os to current as default
  IF(${TART_TARGET_OS} MATCHES "UNDEF")
    SET(TART_TARGET_OS ${TART_CURRENT_OS} CACHE STRING "" FORCE)
    TART_TMP(${TART_TARGET_OS})
  ENDIF()
ENDFUNCTION() 

# FIND_CURRENT_ARCH() Sets the TART_CURRENT_ARCH variable
#
FUNCTION(FIND_CURRENT_ARCH)
  IF(${CMAKE_HOST_SYSTEM_PROCESSOR} MATCHES "x86_64")
    SET(TART_CURRENT_ARCH "i386" CACHE STRING "" FORCE)
  ELSEIF(${CMAKE_HOST_SYSTEM_PROCESSOR} MATCHES "arm64")
    SET(TART_CURRENT_ARCH "arm64" CACHE STRING "" FORCE)
  ENDIF()
  # Set target architecture to current as default
  IF(${TART_TARGET_ARCH} MATCHES "UNDEF")
    SET(TART_TARGET_ARCH ${TART_CURRENT_ARCH} CACHE STRING "" FORCE)
    TART_TMP(${TART_TARGET_ARCH})
  ENDIF()
ENDFUNCTION() 
