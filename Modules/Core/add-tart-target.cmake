# CONFIGURE_PACKAGE_WITH_TART_AS() Other name for ADD_TART_TARGET
FUNCTION(CONFIGURE_PACKAGE_WITH_TART_AS PACKAGE_NAME TARGET_TYPE)
  ADD_TART_TARGET(${PACKAGE_NAME} ${TARGET_TYPE})
ENDFUNCTION()

# ADD_TART_TARGET() adds a target to the current 
# cmake generated project
FUNCTION(ADD_TART_TARGET PACKAGE_NAME TARGET_TYPE)
  TART_INFO("Adding package '${PACKAGE_NAME}' to generated project")
  FIND_PACKAGE_TART_YAML_FILEPATH("${TART_CURRENT_WORKSPACE_DIR}" ${PACKAGE_NAME} PACKAGE_DIR)
  
  GET_PACKAGE_FILES("${PACKAGE_DIR}" LIB_SOURCES INCLUDE_DIR)
  
  TART_DEBUG("${PACKAGE_NAME} sources: ${LIB_SOURCES}")
  IF(${TARGET_TYPE} STREQUAL "LIBRARY")
    ADD_LIBRARY(${PACKAGE_NAME} STATIC ${LIB_SOURCES})
  ELSEIF(${TARGET_TYPE} STREQUAL "SHARED")
    ADD_LIBRARY(${PACKAGE_NAME} SHARED ${LIB_SOURCES})
  ELSEIF(${TARGET_TYPE} STREQUAL "STATIC")
    ADD_LIBRARY(${PACKAGE_NAME} STATIC ${LIB_SOURCES})
  ELSE()
    ADD_EXECUTABLE(${PACKAGE_NAME} ${LIB_SOURCES})
  ENDIF()
  TARGET_INCLUDE_DIRECTORIES(${PACKAGE_NAME} PRIVATE "${INCLUDE_DIR}")

  # SET_TARGET_PROPERTIES(${PACKAGE_NAME} PROPERTY CXX_STANDARD 14)
  

  GET_YAML_ENTRIES_WITH_INDENDTS("${PACKAGE_DIR}/tart.yaml" ENTRIES ENTRY_INDENTS)
  PROCESS_PACKAGE_PROPERTIES(${PACKAGE_NAME} "${ENTRIES}" "${ENTRY_INDENTS}")
  PROCESS_PACKAGE_COMPILE_DEFINITIONS(${PACKAGE_NAME} "${ENTRIES}" "${ENTRY_INDENTS}")
  SET_DEFAULT_PROPERTIES(${PACKAGE_NAME})

  # TODO(nidegen) implement following:
  # IF(GENERATOR_IS_XCODE)
  #   INHERIT_XCODE_COMPILATION_OPTIONS(${PARENT_BUILD_TARGET} ${PACKAGE_NAME})
  # ENDIF()
    
ENDFUNCTION(ADD_TART_TARGET)
